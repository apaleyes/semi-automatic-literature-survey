# List of queries in the format <query_name>: "<query_value>". & (and operator) Â¦ (or operator).
queries:
  - autonomous vehicle: "'autonomous vehicle' & 'machine learning' & ('real-world' & 'deploy')"
  - health: "'health' & 'machine learning' & ('real-world' & 'deploy')"
  - industry: "'industry' & 'machine learning' & ('real-world' & 'deploy')"
  - smart cities: "'smart cities' & 'machine learning' & ('real-world' & 'deploy')"
  - multimedia: "'multimedia' & 'machine learning' & ('real-world' & 'deploy')"
  - science: "'science' & 'machine learning' & ('real-world' & 'deploy')"
  - robotics: "'robotics' & 'machine learning' & ('real-world' & 'deploy')"
  - finance: "'finance' & 'machine learning' & ('real-world' & 'deploy')"
  - e-commerce: "'e-commerce' & 'machine learning' & ('real-world' & 'deploy')"
# Some APIs do not provide the functionality to filter by more specific keywords in the abstract. The syntactic filters
# are keywords that must appear in the abstract of the papers to review. One filter can be composed by multiple
# keywords in conjunction. Synonyms are also used for each keyword in disjunction. If you do not want to use syntactic
# filters comment the whole block.
syntactic_filters:
  - machine learning
  - real-world
  - deploy
# Semantic filters are used to classify the papers and decide which ones to exclude according to their abstract content
# The papers that belong to the excluded classes are removed. The semantic filter uses the lbl2vec algorithm described
# here: https://towardsdatascience.com/unsupervised-text-classification-with-lbl2vec-6c5e040354de.
# If you do not want to use semantic filters please comment the whole block.
semantic_filters:
  - classes:
    - system:
      - architecture
      - framework
      - platform
      - tool
      - prototype
    - software:
      - develop
      - engineering
      - methodology
      - architecture
      - design
      - implementation
      - open
      - source
      - application
    - deploy:
      - production
      - real
      - world
      - embed
      - physical
      - cloud
      - edge
      - infrastructure
    - simulation:
      - synthetic
      - simulate
  - excluded_classes:
      - simulation
# Synonyms of the keywords
health:
  - healthcare
  - health care
  - health-care
  - medicine
  - medical
  - diagnosis
robotics:
  - robots
  - robot
industry:
  - industry 4
  - manufacture
  - manufacturing
  - factory
  - manufactory
  - industrial
smart cities:
  - sustainable city
  - smart city
  - digital city
  - urban
  - city
  - cities
  - mobility
  - transport
  - transportation system
multimedia:
  - virtual reality
  - augmented reality
  - 3D
  - digital twin
  - video games
  - video
  - image recognition
  - audio
  - speech recognition
  - speech
science:
  - pyshics
  - physicology
  - chemistry
  - biology
  - geology
  - social
  - maths
  - materials
  - astronomy
  - climatology
  - oceanology
  - space
autonomous vehicle:
  - self-driving vehicle
  - self-driving car
  - autonomous car
  - driverless car
  - driverless vehicle
  - unmanned car
  - unmanned vehicle
  - unmanned aerial vehicle
finance:
  - banking
networking:
  - computer network
  - intranet
  - internet
  - LAN
  - world wide web
e-commerce:
  - marketplace
  - electronic commerce
  - shoping
  - buying
machine learning:
  - ML
  - deep learning
  - neural network
  - reinforcement learning
  - supervised learning
  - unsupervised learning
  - artificial intelligence
  - AI
deploy:
  - deployment
  - deployed
  - implemented
  - implementation
  - software
real-world:
  - reality
  - real
  - physical world
# Databases where to search for papers
databases:
  - arxiv
  - springer
  #- ieeexplore
  - sciencedirect
  - core
  - semantic_scholar
# Search time interval YYYY-mm-dd. If you do not want to include search dates comment since and to parameters.
#since: 2022-01-01
#to: 2022-02-22
# Date of the search and folder name where the output will be stored
search_date: 2022-08-04
folder_name: doas_search
